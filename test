#!/usr/bin/env node
const assert = require('assert');
const sourceMapExplorer = require('source-map-explorer');
const { sep } = require('path');

const expectedPackages = [
  '<unmapped>',
  'css-selector-tokenizer',
  'cssesc',
  'fastparse',
  'icss-replace-symbols',
  'lodash._arrayeach',
  'lodash._baseeach',
  'lodash._bindcallback',
  'lodash._getnative',
  'lodash.foreach',
  'lodash.isarguments',
  'lodash.isarray',
  'lodash.keys',
  'postcss',
  'postcss-modules-local-by-default',
  'postcss-modules-parser',
  'postcss-modules-scope',
  'postcss-modules-values',
  'postcss-value-parser',
  'regenerate',
  'regexpu-core',
  'regjsgen',
  'regjsparser',
  'rollup-plugin-node-builtins',
  'src/index.js',
];
const packages = Object.keys(sourceMapExplorer('index.esm.min.js').files)
  .map(path =>
    path.startsWith(`node_modules${sep}`)
      ? path
          .split(new RegExp(`(?:^|${sep})node_modules${sep}`))
          .slice(1)
          .map(path => path.split('/')[0])
          .join('.')
      : path
  )
  .reduce(
    (paths, path) => (paths.includes(path) ? paths : [...paths, path]),
    []
  )
  .sort();
try {
  assert.deepStrictEqual(packages, expectedPackages);
} catch (error) {
  console.error(
    'Extra packages:',
    packages.filter(package => !expectedPackages.includes(package)).join(', ')
  );
  throw error;
}
